#+SEQ_TODO:       TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:           Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport

* Namespace: thi.ng.common.error
** Namespace declaration
#+BEGIN_SRC clojure :tangle babel/src/cljx/thi/ng/common/error.cljx :mkdirp yes :padline no
  (ns thi.ng.common.error)
#+END_SRC
** Error throwing functions
#+BEGIN_SRC clojure :tangle babel/src/cljx/thi/ng/common/error.cljx
  (defn throw!
    [^String msg]
    (throw
     ,#+clj  (IllegalArgumentException. msg)
     ,#+cljs (js/Error. msg)))
  
  (defn key-error!
    [k] (throw! (str "Illegal lookup key: " k)))
  
  (defn type-error!
    [t x] (throw! (str "Can't create " t " from " (pr-str x))))
  
  (defn arity-error!
    [n] (throw! (str "Wrong number of args: " n)))
  
  (defn illegal-arg!
    ([x] (illegal-arg! "Illegal argument" x))
    ([msg x] (throw! (str msg ": " x))))
  
  (defn unsupported!
    ([] (unsupported! "Unsupported operation"))
    ([^String msg]
       (throw
        ,#+clj  (UnsupportedOperationException. msg)
        ,#+cljs (js/Error. msg))))
#+END_SRC
